<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;

use AppBundle\Entity\KpiMonth;
use AppBundle\Entity\KpiWeek;
use AppBundle\Entity\KpiYearToDate;
use AppBundle\Entity\Module;
use AppBundle\Entity\UserModule;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */

/**
 * User
 *
 * @ORM\Entity
 * @ORM\Table(name="fos_user_user")
 */
class User extends BaseUser
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string $webMail
     *
     * @ORM\Column(name="web_mail", type="string", length=100, nullable=true)
     */
    protected $webMail;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\KpiMonth", mappedBy="user")
     */
    private $kpiMonths;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\KpiWeek", mappedBy="user")
     */
    private $kpiWeeks;

    /**
     * @ORM\OneToMany(targetEntity="AppBundle\Entity\KpiTrim", mappedBy="user")
     */
    private $kpiTrims;

    /**
     * @var string $dr
     *
     * @ORM\Column(name="dr", type="string", length=100, nullable=true)
     */
    protected $dr;

    /**
     * @var string $brand
     *
     * @ORM\Column(name="brand", type="string", length=100, nullable=true)
     */
    protected $brand ;

    /**
     * @var string $boutique
     *
     * @ORM\Column(name="boutique", type="string", length=100, nullable=true)
     */
    protected $boutique ;

    /**
     * @var string $nom_vendeur
     *
     * @ORM\Column(name="nom_vendeur", type="string", length=100, nullable=true)
     */
    protected $nomVendeur ;

    /**
     * @var string $prenom_vendeur
     *
     * @ORM\Column(name="prenom_vendeur", type="string", length=100, nullable=true)
     */
    protected $prenomVendeur ;

    /**
     * @var boolean
     *
     * @ORM\Column(name="ispremium", type="boolean")
     */
    private $ispremium = 0;

    /**
     * @var integer
     *
     * @ORM\Column(name="nb_transac_ytd", type="integer", nullable=true)
     */
    private $nbTransacYtd = 0;

    /**
     * @var string $role
     *
     * @ORM\Column(name="role", type="string", length=100, nullable=true)
     */
    protected $role ;


    public function __construct()
    {
        parent::__construct();

        $this->kpiMonths = new ArrayCollection();
        $this->kpiWeeks = new ArrayCollection();
        $this->kpiTrims = new ArrayCollection();
        $dr = "";
        $brand = "";
        $role = "";
        $nomVendeur = "";
        $prenomVendeur = "";

        $this->password = $this->setPassword("claravista123");
        $this->enabled = true;
    }

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * set id
     *
     * @return int $id
     */
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }

    /**
     * Get ispremium
     *
     * @return int $ispremium
     */
    public function getIspremium()
    {
        return $this->ispremium;
    }

    /**
     * set ispremium
     *
     * @return int $ispremium
     */
    public function setIspremium($ispremium)
    {
        $this->ispremium = $ispremium;
        return $this;
    }

    /**
     * Get nbTransacYtd
     *
     * @return int $nbTransacYtd
     */
    public function getNbTransacYtd()
    {
        return $this->nbTransacYtd;
    }

    /**
     * set nbTransacYtd
     *
     * @return int $nbTransacYtd
     */
    public function setNbTransacYtd($nbTransacYtd)
    {
        $this->nbTransacYtd = $nbTransacYtd;
        return $this;
    }

    /**
     * Get webMail
     *
     * @return int $webMail
     */
    public function getWebMail()
    {
        return $this->webMail;
    }

    /**
     * Set webMail
     *
     * @param string $webMail
     *
     * @return User
     */
    public function setWebMail($webMail)
    {
        $this->webMail = $webMail;
        return $this;
    }

    /**
     * Get dr
     *
     * @return int $dr
     */
    public function getDr()
    {
        return $this->dr;
    }

    /**
     * Set dr
     *
     * @param string $dr
     *
     * @return User
     */
    public function setDr($dr)
    {
        $this->dr = $dr;
        return $this;
    }

    /**
     * Get brand
     *
     * @return int $brand
     */
    public function getBrand()
    {
        return $this->brand;
    }

    /**
     * Set brand
     *
     * @param string $brand
     *
     * @return User
     */
    public function setBrand($brand)
    {
        $this->brand = $brand;
        return $this;
    }

    /**
     * Get boutique
     *
     * @return int $boutique
     */
    public function getBoutique()
    {
        return $this->boutique;
    }

    /**
     * Set boutique
     *
     * @param string $boutique
     *
     * @return User
     */
    public function setBoutique($boutique)
    {
        $this->boutique = $boutique;
        return $this;
    }

    /**
     * Get nomVendeur
     *
     * @return int $nomVendeur
     */
    public function getNomVendeur()
    {
        return $this->nomVendeur;
    }

    /**
     * Set nomVendeur
     *
     * @param string $nomVendeur
     *
     * @return User
     */
    public function setNomVendeur($nomVendeur)
    {
        $this->nomVendeur = $nomVendeur;
        return $this;
    }

    /**
     * Get prenomVendeur
     *
     * @return int $prenomVendeur
     */
    public function getPrenomVendeur()
    {
        return $this->prenomVendeur;
    }

    /**
     * Set prenomVendeur
     *
     * @param string $prenomVendeur
     *
     * @return User
     */
    public function setPrenomVendeur($prenomVendeur)
    {
        $this->prenomVendeur = $prenomVendeur;
        return $this;
    }

    /**
     * Get role
     *
     * @return int $role
     */
    public function getRole()
    {
        return $this->role;
    }

    /**
     * Set role
     *
     * @param string $role
     *
     * @return User
     */
    public function setRole($role)
    {
        $this->role = $role;
        return $this;
    }

    /**
     * Get emailTarget
     *
     * @return int $emailTarget
     */
    public function getEmailTarget()
    {
        return $this->emailTarget;
    }

    /**
     * Set emailTarget
     *
     * @param string $emailTarget
     *
     * @return User
     */
    public function setEmailTarget($emailTarget)
    {
        $this->emailTarget = $emailTarget;
        return $this;
    }

    /**
     * add kpiMonth
     * remove kpiMonth
     * get kpiMonths
     *
     * @param KpiMonth $kpiMonth
     *
     * @return User
     */
    public function addKpiMonth(KpiMonth $kpiMonth)
    {
        $this->kpiMonths[] = $kpiMonth;

        return $this;
    }

    public function removeKpiMonth(KpiMonth $kpiMonth)
    {
        $this->kpiMonths->removeElement($kpiMonth);
    }

    public function getKpiMonths()
    {
        return $this->kpiMonths;
    }

    /**
     * add kpiTrim
     * remove kpiTrim
     * get kpiTrims
     *
     * @param KpiTrim $kpiTrim
     *
     * @return User
     */
    public function addKpiTrim(KpiTrim $kpiTrim)
    {
        $this->kpiTrims[] = $kpiTrim;

        return $this;
    }

    public function removeKpiTrim(KpiTrim $kpiTrim)
    {
        $this->kpiTrims->removeElement($kpiTrim);
    }

    public function getKpiTrims()
    {
        return $this->kpiTrims;
    }

    /**
     * add kpiWeek
     * remove kpiWeek
     * get kpiYearToDates
     *
     * @param KpiWeek $kpiWeek
     *
     * @return User
     */
    public function addWeek(KpiWeek $kpiWeek)
    {
        $this->kpiWeeks[] = $kpiWeek;

        return $this;
    }

    public function removeWeek(KpiWeek $kpiWeek)
    {
        $this->kpiWeeks->removeElement($kpiWeek);
    }

    public function getWeeks()
    {
        return $this->kpiWeeks;
    }

    public function nameAndSurname()
    {   
        $name = $this->username.' '.$this->prenomVendeur.' '.$this->nomVendeur;

        return $name;
    }

    public function getUsernameCanonical(){

        if($this->locked == 1)
        {
            return $this->username.' >> FERMÃ‰E';
        }
        else{
            return $this->username;
        }
    }
}
